@page "/counter"
@using FamilyShow.Lib.Net7;
@using TestBlazorDrawing.Elements

<PageTitle>Counter</PageTitle>

<h1>Counter</h1>

<p role="status">Current count: @currentCount</p>

<button class="btn btn-primary" @onclick="IncrementCount">Click me</button>

<div style="overflow-y: scroll; height:100px; width:100px; overflow-x:scroll">
    <SvgHolder >
        @for (int i = 0; i < 50; i += 10)
        {
            <SvgSample Cx="@i"/>
        }
    </SvgHolder>
</div>

@if (Rows != null)
{
    <div style="overflow-y: scroll; width:900px;overflow-x:scroll">
        <svg width="@ContainerWidth" height="600" transform="scale(1,1)">
            @for (int i = 0; i < Rows.Keys.Count; i++)
            {
                <PersonBlock Persons="Rows[Rows.Keys.ElementAt(i)]" Width="ContainerWidth" Left="0" Top="i*80"/>
            }
        </svg>
    </div>
}


@code {
    Dictionary<int, List<Person>> Rows = null;
    int ContainerWidth { get; set; }
    string ContainerStyle { get; set; }

    protected override void OnInitialized()
    {
        Rows = GlobalState.Instance.Families.GroupBy(x => x.Generation)
                                                           .OrderBy(x => x.Key)
                                                           .ToDictionary(
                                                               k => k.Key,
                                                               v => v.SelectMany(x => x.Persons).ToList());
        int maxWidth = Rows.Max(x => x.Value.Count);
        ContainerWidth = 150 * maxWidth;

        ContainerStyle = $"overflow-y: scroll; height:{ContainerStyle}px;overflow-x:scroll";
    }


    private int currentCount = 0;

    private void IncrementCount()
    {
        currentCount++;
    }


}